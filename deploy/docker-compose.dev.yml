# mkdir -p ${PWD}/data/db/timescaledb
# docker volume create --driver local --opt type=none --opt device=${PWD}/data/db/timescaledb --opt o=bind beefy_timescaledb_data_directory
# mkdir -p ${PWD}/data/db/grafana && chmod 777 ${PWD}/data/db/grafana
# docker volume create --driver local --opt type=none --opt device=${PWD}/data/db/grafana --opt o=bind beefy_grafana_data_directory
# mkdir -p ${PWD}/data/db/grafana_plugins && chmod 777 ${PWD}/data/db/grafana_plugins
# docker volume create --driver local --opt type=none --opt device=${PWD}/data/db/grafana_plugins --opt o=bind beefy_grafana_plugins_directory

# tune the system: https://docs.timescale.com/timescaledb/latest/how-to-guides/configuration/timescaledb-tune/#timescaledb-tuning-tool
# docker exec -it beefy_db-timescaledb-1 timescaledb-tune --yes --memory="4GB" --cpus=2 --max-bg-workers=16 --dry-run

services:
  redis:
    image: redis:7-alpine
    command: redis-server --save "" --appendonly no --maxmemory 50mb --replicaof no one
    ports:
      - "6379:6379"
    networks:
      - backend

  timescaledb:
    image: timescale/timescaledb-ha:pg14.6-ts2.9.1-latest
    volumes:
      - timescaledb_data:/pgdata
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    # configure the database
    #command: postgres -c max_locks_per_transaction=600
    command: postgres -c logging_collector=off -c log_min_duration_statement=1s -c log_statement=none -c max_locks_per_transaction=500
    env_file: ../.env
    cpus: ${TIMESCALEDB_CPU_SHARE:-0.3}
    stop_signal: SIGINT
    ports:
      - "5432:5432"
    environment:
      TZ: "UTC"
      POSTGRES_PORT: 5432
      POSTGRES_USER: beefy
      POSTGRES_PASSWORD: beefy
      POSTGRES_DB: beefy
      PGDATA: /pgdata
    networks:
      - backend

  grafana:
    image: grafana/grafana:10.1.4
    ports:
      - "3000:3000"
    env_file: ../.env-grafana
    cpus: ${GRAFANA_CPU_SHARE:-0.3}
    stop_signal: SIGINT
    environment:
      TZ: UTC
      POSTGRES_HOST: timescaledb
      POSTGRES_PORT: 5432
      POSTGRES_USER: grafana_ro
      POSTGRES_PASSWORD: grafana_ro
      POSTGRES_DB: beefy
      PORT: 3000
      GRAFANA_WEBAPP_DOMAIN_NAME: localhost
      GF_INSTALL_PLUGINS: marcusolsson-json-datasource
      GF_AUTH_DISABLE_LOGIN: false
      GF_AUTH_DISABLE_LOGIN_FORM: false
      GF_AUTH_GITHUB_ENABLED: false
      DISCORD_ALERT_WEBHOOK_URL: "http://localhost"
    volumes:
      - grafana_data_wtf:/var/lib/grafana
      - grafana_plugins:/var/lib/grafana/plugins
      - ./analytics/custom.ini:/etc/grafana/grafana.ini
      - ./analytics/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./analytics/provisioning/alerting:/etc/grafana/provisioning/alerting
      - ./analytics/provisioning/datasources:/etc/grafana/provisioning/datasources
    depends_on:
      - timescaledb
      #- public-api
    networks:
      - backend

  #public-api:
  #  image: beefy-data-importer
  #  restart: always
  #  ports:
  #    - "8080:8080"
  #  environment:
  #    TZ: UTC
  #    LOG_LEVEL: trace
  #    REDIS_URL: redis://redis:6379
  #    TIMESCALEDB_URL: postgres://api_ro:api_ro@timescaledb:5432/beefy
  #    API_LISTEN: "::" # listen on all interfaces inside the container
  #    WORK_CMD: "./dist/src/api/server.js"
  #    API_URL: "http://localhost:8080"
  #    API_FRONTEND_URL: "http://localhost:3001"
  #  networks:
  #    - backend
  #  depends_on:
  #    - redis
  #    - timescaledb

volumes:
  timescaledb_data:
    external: true
    name: beefy_timescaledb_data_directory
  grafana_data_wtf: {}
  grafana_data:
    external: true
    name: beefy_grafana_data_directory
  grafana_plugins:
    external: true
    name: beefy_grafana_plugins_directory

networks:
  backend: {}
