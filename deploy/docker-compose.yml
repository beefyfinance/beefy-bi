version: "3.9" # optional since v1.27.0

# docker build -t beefy-data-importer -f ./deploy/import/Dockerfile ./
# docker volume create --driver local --opt type=none --opt device=${PWD}/data/git-work --opt o=bind beefy_git_work_directory
# docker volume create --driver local --opt type=none --opt device=${PWD}/data/db/timescaledb --opt o=bind beefy_timescaledb_data_directory
# docker volume create --driver local --opt type=none --opt device=${PWD}/data/db/grafana --opt o=bind beefy_grafana_data_directory
# docker volume create --driver local --opt type=none --opt device=${PWD}/data/db/grafana_plugins --opt o=bind beefy_grafana_plugins_directory

# tune the system: https://docs.timescale.com/timescaledb/latest/how-to-guides/configuration/timescaledb-tune/#timescaledb-tuning-tool
# docker exec -it deploy-timescaledb-1 timescaledb-tune --yes --memory="20GB" --cpus=10 --dry-run

# docker compose -f deploy/docker-compose.yml up -d
# docker compose -f deploy/docker-compose.yml logs -f
# docker compose -f deploy/docker-compose.yml down
# docker compose -f deploy/docker-compose.yml rm # cleanup logs sometimes

# docker compose -f deploy/docker-compose.yml logs -f importer

# export TASK_LIST="importer-products importer-ignore-addresses importer-investor-cache importer-prices-historical importer-prices-recent importer-investment-recent-arbitrum ..."
# docker build -t beefy-data-importer -f ./deploy/import/Dockerfile ./
# docker compose -f deploy/docker-compose.yml stop $TASK_LIST
# docker compose -f deploy/docker-compose.yml up $TASK_LIST -d --force-recreate
# docker compose -f deploy/docker-compose.yml logs -f $TASK_LIST
# docker compose -f deploy/docker-compose.yml logs -f $TASK_LIST | grep -vi 'archive node' | grep -vi 'missing revert data in call' | grep -vi 'missing trie node' | grep -vi 'The operation was unable to achieve a quorum during its retry window' | grep -vi 'Connection timeout error, will retry'

# docker compose -f deploy/docker-compose.yml up public-api -d --force-recreate
# RUN a command
# docker exec -it -e LOG_LEVEL=trace deploy-importer-investment-historical-1 node ./dist/src/script/run.js beefy:run -i historical -c kava
# docker exec -it -e LOG_LEVEL=trace deploy-importer-products-1 node ./dist/src/script/run.js db:migrate

x-importer: &importer
  image: beefy-data-importer
  restart: always
  env_file: ../.env
  environment:
    WORK_CMD: "./dist/src/script/run.js beefy:run -t products -l 2hour"
  stop_signal: SIGINT
  volumes:
    - git_work_directory:/git_work
  logging:
    driver: "local"
    options:
      max-size: "5M"
      max-file: "3"
  networks:
    - backend
  depends_on:
    - redis
    - timescaledb

x-importer-env: &importer-env
  REDIS_URL: redis://redis:6379
  TIMESCALEDB_URL: postgres://beefy:beefy@timescaledb:5432/beefy
  GIT_WORK_DIRECTORY: /git_work

volumes:
  git_work_directory:
    external: true
    name: beefy_git_work_directory
  timescaledb_data:
    external: true
    name: beefy_timescaledb_data_directory
  grafana_data:
    external: true
    name: beefy_grafana_data_directory
  grafana_plugins:
    external: true
    name: beefy_grafana_plugins_directory

networks:
  backend: {}
  proxy-exposed:
    name: proxy-exposed
    external: true

services:
  redis:
    image: redis:7-alpine
    restart: always
    command: redis-server --save "" --appendonly no --replicaof no one
    stop_signal: SIGINT
    networks:
      - backend

  timescaledb:
    image: timescale/timescaledb-ha:pg14.6-ts2.9.1-latest
    volumes:
      - timescaledb_data:/home/postgres/pgdata/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    command: postgres -c 'max_connections=250' -c logging_collector=off -c log_min_duration_statement=60s -c log_statement=none -c shared_buffers=16GB -c effective_cache_size=40GB -c timescaledb.max_background_workers=10 -c max_worker_processes=12 -c max_parallel_workers_per_gather=5 -c max_parallel_workers=10 -c max_parallel_maintenance_workers=4 -c maintenance_work_mem=10GB -c min_wal_size=4GB -c max_wal_size=16GB -c max_locks_per_transaction=500
    stop_signal: SIGINT
    shm_size: 256M
    deploy:
      resources:
        limits:
          cpus: "0.70"
          memory: 50G
        reservations:
          cpus: "0.25"
          memory: 15G
    logging:
      driver: "local"
      options:
        max-size: "5M"
        max-file: "3"
    environment:
      TZ: "UTC"
      POSTGRES_PORT: 5432
      POSTGRES_USER: beefy
      POSTGRES_PASSWORD: beefy
      POSTGRES_DB: beefy
      PGDATA: /home/postgres/pgdata/data
    networks:
      - backend

  grafana:
    image: grafana/grafana:9.2.15
    expose:
      - "3000"
    deploy:
      resources:
        limits:
          cpus: "0.20"
          memory: 1G
        reservations:
          cpus: "0.05"
          memory: 250M
    stop_signal: SIGINT
    environment:
      TZ: UTC
      POSTGRES_HOST: timescaledb
      POSTGRES_PORT: 5432
      POSTGRES_USER: grafana_ro
      POSTGRES_PASSWORD: grafana_ro
      POSTGRES_DB: beefy
      GF_INSTALL_PLUGINS: marcusolsson-json-datasource
      LETSENCRYPT_HOST: dm-control.beefy.com
      VIRTUAL_HOST: dm-control.beefy.com
      VIRTUAL_PORT: 3000
      TRUST_DOWNSTREAM_PROXY: true
    logging:
      driver: "local"
      options:
        max-size: "5M"
        max-file: "3"
    volumes:
      - grafana_data:/var/lib/grafana
      - grafana_plugins:/var/lib/grafana/plugins
      - ./db/grafana.ini:/etc/grafana/grafana.ini
      - ./db/grafana_datasource.yml:/etc/grafana/provisioning/datasources/timescaledb.yml
    depends_on:
      - timescaledb
    networks:
      - backend
      - proxy-exposed

  public-api:
    image: beefy-data-importer
    restart: always
    env_file: ../.env
    expose:
      - "8080"
    stop_signal: SIGINT
    environment:
      TZ: UTC
      REDIS_URL: redis://redis:6379
      TIMESCALEDB_URL: postgres://api_ro:api_ro@timescaledb:5432/beefy
      API_LISTEN: "::" # listen on all interfaces inside the container
      WORK_CMD: "./dist/src/api/public-server.js"
      LETSENCRYPT_HOST: databarn.beefy.com,databarn.beefy.finance
      VIRTUAL_HOST: databarn.beefy.com,databarn.beefy.finance
      VIRTUAL_PORT: 8080
      TRUST_DOWNSTREAM_PROXY: true
    logging:
      driver: "local"
      options:
        max-size: "5M"
        max-file: "3"
    networks:
      - backend
      - proxy-exposed
    depends_on:
      - redis
      - timescaledb

  private-api:
    image: beefy-data-importer
    restart: always
    env_file: ../.env
    expose:
      - "8081"
    stop_signal: SIGINT
    environment:
      TZ: UTC
      REDIS_URL: redis://redis:6379
      TIMESCALEDB_URL: postgres://api_ro:api_ro@timescaledb:5432/beefy
      API_PORT: 8081
      API_LISTEN: "::" # listen on all interfaces inside the container
      WORK_CMD: "./dist/src/api/private-server.js"
      LETSENCRYPT_HOST: db-core.beefy.com
      VIRTUAL_HOST: db-core.beefy.com
      VIRTUAL_PORT: 8081
      TRUST_DOWNSTREAM_PROXY: true
    logging:
      driver: "local"
      options:
        max-size: "5M"
        max-file: "3"
    networks:
      - backend
      - proxy-exposed
    depends_on:
      - redis
      - timescaledb

  importer-products:
    <<: *importer
    environment:
      <<: *importer-env
      WORK_CMD: "./dist/src/script/run.js beefy:run -t products -l 2hour"

  importer-ignore-addresses:
    <<: *importer
    environment:
      <<: *importer-env
      WORK_CMD: "./dist/src/script/run.js beefy:run -t ignore-address -l 1day"

  importer-investor-cache:
    <<: *importer
    environment:
      <<: *importer-env
      WORK_CMD: "./dist/src/script/run.js beefy:run -t investor-cache -l 5min"

  importer-prices-historical:
    <<: *importer
    environment:
      <<: *importer-env
      WORK_CMD: "./dist/src/script/run.js beefy:run -t historical-prices -c arbitrum -c avax -c base -c bsc -c canto -c cronos -c ethereum -c fantom -c fuse -c kava -c metis -c moonbeam -c moonriver -c optimism -c polygon -c zkevm -c zksync -e false -S live -l 1hour"

  importer-prices-recent:
    <<: *importer
    environment:
      <<: *importer-env
      WORK_CMD: "./dist/src/script/run.js beefy:run -t recent-prices -c arbitrum -c avax -c base -c bsc -c canto -c cronos -c ethereum -c fantom -c fuse -c kava -c metis -c moonbeam -c moonriver -c optimism -c polygon -c zkevm -c zksync -l 15min"

  importer-historical-product-statistics:
    <<: *importer
    environment:
      <<: *importer-env
      WORK_CMD: "./dist/src/script/run.js beefy:run -t historical-product-statistics -e false -c arbitrum -c avax -c base -c bsc -c canto -c cronos -c ethereum -c fantom -c fuse -c kava -c metis -c moonbeam -c moonriver -c optimism -c polygon -c zkevm -c zksync -l 1day"
 
  # arbitrum avax base bsc canto cronos ethereum fantom fuse kava metis moonbeam moonriver optimism polygon zkevm zksync

  importer-investment-recent-arbitrum-avax:
    <<: *importer
    environment:
      <<: *importer-env
      WORK_CMD: "./dist/src/script/run.js beefy:run -e false -t recent -c arbitrum -c avax -l 1min"

  importer-investment-recent-base-kava-metis-moonbeam-moonriver-zksync:
    <<: *importer
    environment:
      <<: *importer-env
      WORK_CMD: "./dist/src/script/run.js beefy:run -e false -t recent -c base -c kava -c metis -c moonbeam -c moonriver -c zksync -l 1min"

  importer-investment-recent-bsc:
    <<: *importer
    environment:
      <<: *importer-env
      WORK_CMD: "./dist/src/script/run.js beefy:run -e false -t recent -c bsc -l 1min"

  importer-investment-recent-canto-cronos-fuse:
    <<: *importer
    environment:
      <<: *importer-env
      WORK_CMD: "./dist/src/script/run.js beefy:run -e false -t recent -c canto -c cronos -c fuse -l 1min"

  importer-investment-recent-ethereum-optimism:
    <<: *importer
    environment:
      <<: *importer-env
      WORK_CMD: "./dist/src/script/run.js beefy:run -e false -t recent -c ethereum -c optimism -l 1min"

  importer-investment-recent-fantom-polygon-zkevm:
    <<: *importer
    environment:
      <<: *importer-env
      WORK_CMD: "./dist/src/script/run.js beefy:run -e false -t recent -c fantom -c polygon -c zkevm -l 1min"

  # arbitrum avax base bsc canto cronos ethereum fantom fuse kava metis moonbeam moonriver optimism polygon zkevm zksync

  importer-investment-historical-arbitrum-avax:
    <<: *importer
    environment:
      <<: *importer-env
      WORK_CMD: "./dist/src/script/run.js beefy:run -e false -t historical -c arbitrum -c avax -l 15min -S all"

  importer-investment-historical-base-kava-metis-moonbeam-moonriver-zksync:
    <<: *importer
    environment:
      <<: *importer-env
      WORK_CMD: "./dist/src/script/run.js beefy:run -e false -t historical -c base -c kava -c metis -c moonbeam -c moonriver -c zksync -l 15min -S all"

  importer-investment-historical-bsc:
    <<: *importer
    environment:
      <<: *importer-env
      WORK_CMD: "./dist/src/script/run.js beefy:run -e false -t historical -c bsc -l 15min -S all"

  importer-investment-historical-canto-cronos-fuse:
    <<: *importer
    environment:
      <<: *importer-env
      WORK_CMD: "./dist/src/script/run.js beefy:run -e false -t historical -c canto -c cronos -c fuse -l 15min -S all"

  importer-investment-historical-ethereum-optimism:
    <<: *importer
    environment:
      <<: *importer-env
      WORK_CMD: "./dist/src/script/run.js beefy:run -e false -t historical -c ethereum -c optimism -l 15min -S all"

  importer-investment-historical-fantom-polygon-zkevm:
    <<: *importer
    environment:
      <<: *importer-env
      WORK_CMD: "./dist/src/script/run.js beefy:run -e false -t historical -c fantom -c polygon -c zkevm -l 15min -S all"

  # arbitrum avax base bsc canto cronos ethereum fantom fuse kava metis moonbeam moonriver optimism polygon zksync

  importer-investment-historical-share-rate-arbitrum-avax:
    <<: *importer
    environment:
      <<: *importer-env
      WORK_CMD: "./dist/src/script/run.js beefy:run -e false -t historical-share-rate -c arbitrum -c avax -l 15min -S all"

  importer-investment-historical-share-rate-base-kava-metis-moonbeam-moonriver-zksync:
    <<: *importer
    environment:
      <<: *importer-env
      WORK_CMD: "./dist/src/script/run.js beefy:run -e false -t historical-share-rate -c base -c kava -c metis -c moonbeam -c moonriver -c zksync -l 15min -S all"

  importer-investment-historical-share-rate-bsc:
    <<: *importer
    environment:
      <<: *importer-env
      WORK_CMD: "./dist/src/script/run.js beefy:run -e false -t historical-share-rate -c bsc -l 15min -S all"

  importer-investment-historical-share-rate-canto-cronos-fuse:
    <<: *importer
    environment:
      <<: *importer-env
      WORK_CMD: "./dist/src/script/run.js beefy:run -e false -t historical-share-rate -c canto -c cronos -c fuse -l 15min -S all"

  importer-investment-historical-share-rate-ethereum-optimism:
    <<: *importer
    environment:
      <<: *importer-env
      WORK_CMD: "./dist/src/script/run.js beefy:run -e false -t historical-share-rate -c ethereum -c optimism -l 15min -S all"

  importer-investment-historical-share-rate-fantom-polygon-zkevm:
    <<: *importer
    environment:
      <<: *importer-env
      WORK_CMD: "./dist/src/script/run.js beefy:run -e false -t historical-share-rate -c fantom -c polygon -c zkevm -l 15min -S all"

  # arbitrum avax base bsc canto cronos ethereum fantom fuse kava metis moonbeam moonriver optimism polygon zkevm zksync

  importer-investment-recent-share-rate-arbitrum-avax:
    <<: *importer
    environment:
      <<: *importer-env
      WORK_CMD: "./dist/src/script/run.js beefy:run -e false -t recent-share-rate -c arbitrum -c avax -L 0 -l 15min -S all"

  importer-investment-recent-share-rate-base-kava-metis-moonbeam-moonriver-zksync:
    <<: *importer
    environment:
      <<: *importer-env
      WORK_CMD: "./dist/src/script/run.js beefy:run -e false -t recent-share-rate -c base -c kava -c metis -c moonbeam -c moonriver -c zksync -L 0 -l 15min -S all"

  importer-investment-recent-share-rate-bsc:
    <<: *importer
    environment:
      <<: *importer-env
      WORK_CMD: "./dist/src/script/run.js beefy:run -e false -t recent-share-rate -c bsc -L 0 -l 15min -S all"

  importer-investment-recent-share-rate-canto-cronos-fuse:
    <<: *importer
    environment:
      <<: *importer-env
      WORK_CMD: "./dist/src/script/run.js beefy:run -e false -t recent-share-rate -c canto -c cronos -c fuse -L 0 -l 15min -S all"

  importer-investment-recent-share-rate-ethereum-optimism:
    <<: *importer
    environment:
      <<: *importer-env
      WORK_CMD: "./dist/src/script/run.js beefy:run -e false -t recent-share-rate -c ethereum -c optimism -L 0 -l 15min -S all"

  importer-investment-recent-share-rate-fantom-polygon-zkevm:
    <<: *importer
    environment:
      <<: *importer-env
      WORK_CMD: "./dist/src/script/run.js beefy:run -e false -t recent-share-rate -c fantom -c polygon -c zkevm -L 0 -l 15min -S all"
