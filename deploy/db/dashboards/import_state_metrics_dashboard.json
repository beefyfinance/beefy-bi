{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "grafana",
          "uid": "-- Grafana --"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "target": {
          "limit": 100,
          "matchAny": false,
          "tags": [],
          "type": "dashboard"
        },
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": 16,
  "links": [],
  "liveNow": false,
  "panels": [
    {
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 759,
      "title": "Global work",
      "type": "row"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "P1A7A05C63CAD1F73"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "none"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byRegexp",
              "options": ".*error.*"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "#f2495c80",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": ".*not_covered.*"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "#5795f280",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": ".*total_work.*"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "#ff983080",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": ".*progress.*"
            },
            "properties": [
              {
                "id": "unit",
                "value": "percentunit"
              },
              {
                "id": "color",
                "value": {
                  "mode": "thresholds"
                }
              },
              {
                "id": "thresholds",
                "value": {
                  "mode": "absolute",
                  "steps": [
                    {
                      "color": "green",
                      "value": null
                    },
                    {
                      "color": "red",
                      "value": 0
                    }
                  ]
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 5,
        "w": 15,
        "x": 0,
        "y": 1
      },
      "id": 1296,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": ["allValues"],
          "fields": "",
          "values": true
        },
        "textMode": "value_and_name"
      },
      "pluginVersion": "9.2.15",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "P1A7A05C63CAD1F73"
          },
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "with last_chain_stats as (\n  SELECT\n    chain,\n    import_type,\n    last(errors_count, datetime) as errors_count,\n    last(not_covered_yet, datetime) as not_covered_yet,\n    last(success_count, datetime) as success_count,\n    last(errors_count, datetime) + last(not_covered_yet, datetime) as total_work\n  FROM import_state_metrics_ts\n  WHERE\n    $__timeFilter(datetime)\n    and chain in ($chains)\n    and eol in (select unnest(Array[$dashboard_eol]::boolean[]))\n    and import_type in ('product:investment', 'product:share-rate')\n  group by 1,2\n), first_chain_stats as (\n  SELECT\n    chain,\n    import_type,\n    first(errors_count, datetime) as errors_count,\n    first(not_covered_yet, datetime) as not_covered_yet,\n    first(success_count, datetime) as success_count,\n    first(errors_count, datetime) + first(not_covered_yet, datetime) as total_work\n  FROM import_state_metrics_ts\n  WHERE\n    $__timeFilter(datetime)\n    and chain in ($chains)\n    and eol in (select unnest(Array[$dashboard_eol]::boolean[]))\n    and import_type in ('product:investment', 'product:share-rate')\n  group by 1,2\n)\nselect \n  sum(f.errors_count) as errors_count_before,\n  sum(l.errors_count) as errors_count_now,\n  case when sum(f.errors_count) = 0 then 0 else (sum(l.errors_count) - sum(f.errors_count))/sum(f.errors_count) end as error_progress,\n  --sum(f.success_count) as success_count_before,\n  --sum(l.success_count) as success_count_now,\n  --case when sum(f.success_count) = 0 then 0 else (sum(l.success_count) - sum(f.success_count))/sum(f.success_count) end as success_count_progress,\n  sum(f.not_covered_yet) as not_covered_yet_before,\n  sum(l.not_covered_yet) as not_covered_yet_now,\n  case when sum(f.not_covered_yet) = 0 then 0 else (sum(l.not_covered_yet) - sum(f.not_covered_yet))/sum(f.not_covered_yet) end as not_covered_yet_progress,\n  sum(f.total_work) as total_work_before,\n  sum(l.total_work) as total_work_now,\n  case when sum(f.total_work) = 0 then 0 else (sum(l.total_work) - sum(f.total_work))/sum(f.total_work) end as total_work_progress\nfrom last_chain_stats l\n left join first_chain_stats f on l.chain = f.chain and l.import_type = f.import_type",
          "refId": "A",
          "select": [
            [
              {
                "params": ["balance"],
                "type": "column"
              }
            ]
          ],
          "table": "beefy_investor_timeline_cache_ts",
          "timeColumn": "datetime",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "$chains investments: Import Stats ",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "P1A7A05C63CAD1F73"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            }
          },
          "mappings": [],
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 5,
        "w": 3,
        "x": 15,
        "y": 1
      },
      "id": 898,
      "options": {
        "displayLabels": ["name", "percent"],
        "legend": {
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "pieType": "pie",
        "reduceOptions": {
          "calcs": ["allValues"],
          "fields": "/^total_work$/",
          "values": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "9.2.3",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "P1A7A05C63CAD1F73"
          },
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "with last_metrics as (\n  SELECT\n    chain,\n    import_type,\n    last(errors_count, datetime) as errors_count,\n    last(not_covered_yet, datetime) as not_covered_yet,\n    last(success_count, datetime) as success_count,\n    last(errors_count, datetime) + last(not_covered_yet, datetime) as total_work\n  FROM import_state_metrics_ts\n  WHERE\n    $__timeFilter(datetime)\n    and chain in ($chains)\n    and eol in (select unnest(Array[$dashboard_eol]::boolean[]))\n    and import_type in ('product:investment', 'product:share-rate')\n  group by 1,2\n)\nselect \n  chain,\n  sum(total_work) as total_work\nfrom last_metrics\ngroup by 1",
          "refId": "A",
          "select": [
            [
              {
                "params": ["balance"],
                "type": "column"
              }
            ]
          ],
          "table": "beefy_investor_timeline_cache_ts",
          "timeColumn": "datetime",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "$chains investments & share rate total work",
      "type": "piechart"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "P1A7A05C63CAD1F73"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            }
          },
          "mappings": [],
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 5,
        "w": 3,
        "x": 18,
        "y": 1
      },
      "id": 899,
      "options": {
        "displayLabels": ["name", "percent"],
        "legend": {
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "pieType": "pie",
        "reduceOptions": {
          "calcs": ["allValues"],
          "fields": "/^total_work$/",
          "values": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "9.2.3",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "P1A7A05C63CAD1F73"
          },
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "with last_metrics as (\n  SELECT\n    chain,\n    import_type,\n    last(errors_count, datetime) as errors_count,\n    last(not_covered_yet, datetime) as not_covered_yet,\n    last(success_count, datetime) as success_count,\n    last(errors_count, datetime) + last(not_covered_yet, datetime) as total_work\n  FROM import_state_metrics_ts\n  WHERE\n    $__timeFilter(datetime)\n    and chain in ($chains)\n    and eol in (select unnest(Array[$dashboard_eol]::boolean[]))\n    and import_type in ('product:investment')\n  group by 1,2\n)\nselect \n  chain,\n  sum(total_work) as total_work\nfrom last_metrics\ngroup by 1",
          "refId": "A",
          "select": [
            [
              {
                "params": ["balance"],
                "type": "column"
              }
            ]
          ],
          "table": "beefy_investor_timeline_cache_ts",
          "timeColumn": "datetime",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "$chains investments total work",
      "type": "piechart"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "P1A7A05C63CAD1F73"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            }
          },
          "mappings": [],
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 5,
        "w": 3,
        "x": 21,
        "y": 1
      },
      "id": 900,
      "options": {
        "displayLabels": ["name", "percent"],
        "legend": {
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "pieType": "pie",
        "reduceOptions": {
          "calcs": ["allValues"],
          "fields": "/^total_work$/",
          "values": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "9.2.3",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "P1A7A05C63CAD1F73"
          },
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "with last_metrics as (\n  SELECT\n    chain,\n    import_type,\n    last(errors_count, datetime) as errors_count,\n    last(not_covered_yet, datetime) as not_covered_yet,\n    last(success_count, datetime) as success_count,\n    last(errors_count, datetime) + last(not_covered_yet, datetime) as total_work\n  FROM import_state_metrics_ts\n  WHERE\n    $__timeFilter(datetime)\n    and chain in ($chains)\n    and eol in (select unnest(Array[$dashboard_eol]::boolean[]))\n    and import_type in ( 'product:share-rate')\n  group by 1,2\n)\nselect \n  chain,\n  sum(total_work) as total_work\nfrom last_metrics\ngroup by 1",
          "refId": "A",
          "select": [
            [
              {
                "params": ["balance"],
                "type": "column"
              }
            ]
          ],
          "table": "beefy_investor_timeline_cache_ts",
          "timeColumn": "datetime",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "$chains share rate total work",
      "type": "piechart"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "P1A7A05C63CAD1F73"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "series",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "none"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byRegexp",
              "options": ".+_total_work"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "orange",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": ".+_errors_count"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "red",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": ".+_not_covered_yet"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "blue",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "min_.+"
            },
            "properties": [
              {
                "id": "custom.lineWidth",
                "value": 0
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "max_.+"
            },
            "properties": [
              {
                "id": "custom.lineWidth",
                "value": 0
              },
              {
                "id": "custom.fillOpacity",
                "value": 31
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "max_total_work"
            },
            "properties": [
              {
                "id": "custom.fillBelowTo",
                "value": "min_total_work"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "max_errors_count"
            },
            "properties": [
              {
                "id": "custom.fillBelowTo",
                "value": "min_errors_count"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "max_not_covered_yet"
            },
            "properties": [
              {
                "id": "custom.fillBelowTo",
                "value": "min_not_covered_yet"
              }
            ]
          },
          {
            "__systemRef": "hideSeriesFrom",
            "matcher": {
              "id": "byNames",
              "options": {
                "mode": "exclude",
                "names": [
                  "avg_total_work",
                  "min_errors_count",
                  "min_not_covered_yet",
                  "min_total_work",
                  "max_errors_count",
                  "max_not_covered_yet",
                  "max_total_work"
                ],
                "prefix": "All except:",
                "readOnly": true
              }
            },
            "properties": [
              {
                "id": "custom.hideFrom",
                "value": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 10,
        "w": 12,
        "x": 0,
        "y": 6
      },
      "id": 756,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "P1A7A05C63CAD1F73"
          },
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "with stats as (\n  SELECT\n    datetime,\n    sum(errors_count) as errors_count,\n    sum(success_count) as success_count,\n    sum(not_covered_yet) as not_covered_yet,\n    sum(errors_count) + sum(not_covered_yet) as total_work\n  FROM import_state_metrics_ts\n  WHERE\n    $__timeFilter(datetime)\n    and chain in ($chains)\n    and eol in (select unnest(Array[$dashboard_eol]::boolean[]))\n    and import_type in ('product:investment', 'product:share-rate')\n  group by 1\n)\nselect \n  time_bucket('$interval'::interval, datetime) AS \"time\",\n  min(errors_count) as min_errors_count,\n  avg(errors_count) as avg_errors_count,\n  max(errors_count) as max_errors_count,\n  min(not_covered_yet) as min_not_covered_yet,\n  avg(not_covered_yet) as avg_not_covered_yet,\n  max(not_covered_yet) as max_not_covered_yet,\n  min(total_work) as min_total_work,\n  avg(total_work) as avg_total_work,\n  max(total_work) as max_total_work\nfrom stats\ngroup by 1\nORDER BY 1",
          "refId": "A",
          "select": [
            [
              {
                "params": ["balance"],
                "type": "column"
              }
            ]
          ],
          "table": "beefy_investor_timeline_cache_ts",
          "timeColumn": "datetime",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "$chains investments & share rate",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "P1A7A05C63CAD1F73"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "series",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 10,
        "w": 12,
        "x": 12,
        "y": 6
      },
      "id": 905,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "P1A7A05C63CAD1F73"
          },
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT\n  chain,\n  datetime AS \"time\",\n  --sum(errors_count) as errors_count,\n  --success_count as success_count,\n  --sum(not_covered_yet) as not_covered_yet,\n  sum(errors_count) + sum(not_covered_yet) as total_work\nFROM import_state_metrics_ts\nWHERE\n  $__timeFilter(datetime)\n  and chain in ($chains)\n    and eol in (select unnest(Array[$dashboard_eol]::boolean[]))\n  and import_type in ('product:investment', 'product:share-rate')\ngroup by 1, 2\nORDER BY 2",
          "refId": "A",
          "select": [
            [
              {
                "params": ["balance"],
                "type": "column"
              }
            ]
          ],
          "table": "beefy_investor_timeline_cache_ts",
          "timeColumn": "datetime",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "$chains investments & share rate",
      "type": "timeseries"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 16
      },
      "id": 829,
      "panels": [],
      "title": "By type of import",
      "type": "row"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "P1A7A05C63CAD1F73"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "none"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byRegexp",
              "options": ".*error.*"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "#f2495c80",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": ".*not_covered.*"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "#5795f280",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": ".*total_work.*"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "#ff983080",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": ".*progress.*"
            },
            "properties": [
              {
                "id": "unit",
                "value": "percentunit"
              },
              {
                "id": "color",
                "value": {
                  "mode": "thresholds"
                }
              },
              {
                "id": "thresholds",
                "value": {
                  "mode": "absolute",
                  "steps": [
                    {
                      "color": "green",
                      "value": null
                    },
                    {
                      "color": "red",
                      "value": 0
                    }
                  ]
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 3,
        "w": 12,
        "x": 0,
        "y": 17
      },
      "id": 492,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": ["allValues"],
          "fields": "",
          "values": true
        },
        "textMode": "value_and_name"
      },
      "pluginVersion": "9.2.15",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "P1A7A05C63CAD1F73"
          },
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "with last_chain_stats as (\n  SELECT\n    chain,\n    last(errors_count, datetime) as errors_count,\n    last(not_covered_yet, datetime) as not_covered_yet,\n    last(success_count, datetime) as success_count,\n    last(errors_count, datetime) + last(not_covered_yet, datetime) as total_work\n  FROM import_state_metrics_ts\n  WHERE\n    $__timeFilter(datetime)\n    and chain in ($chains)\n    and eol in (select unnest(Array[$dashboard_eol]::boolean[]))\n    and import_type = 'product:investment'\n  group by 1\n), first_chain_stats as (\n  SELECT\n    chain,\n    first(errors_count, datetime) as errors_count,\n    first(not_covered_yet, datetime) as not_covered_yet,\n    first(success_count, datetime) as success_count,\n    first(errors_count, datetime) + first(not_covered_yet, datetime) as total_work\n  FROM import_state_metrics_ts\n  WHERE\n    $__timeFilter(datetime)\n    and chain in ($chains)\n    and eol in (select unnest(Array[$dashboard_eol]::boolean[]))\n    and import_type = 'product:investment'\n  group by 1\n)\nselect \n  sum(f.errors_count) as errors_count_before,\n  sum(l.errors_count) as errors_count_now,\n  case when sum(f.errors_count) = 0 then 0 else (sum(l.errors_count) - sum(f.errors_count))/sum(f.errors_count) end as error_progress,\n  --sum(f.success_count) as success_count_before,\n  --sum(l.success_count) as success_count_now,\n  --case when sum(f.success_count) = 0 then 0 else (sum(l.success_count) - sum(f.success_count))/sum(f.success_count) end as success_count_progress,\n  sum(f.not_covered_yet) as not_covered_yet_before,\n  sum(l.not_covered_yet) as not_covered_yet_now,\n  case when sum(f.not_covered_yet) = 0 then 0 else (sum(l.not_covered_yet) - sum(f.not_covered_yet))/sum(f.not_covered_yet) end as not_covered_yet_progress,\n  sum(f.total_work) as total_work_before,\n  sum(l.total_work) as total_work_now,\n  case when sum(f.total_work) = 0 then 0 else (sum(l.total_work) - sum(f.total_work))/sum(f.total_work) end as total_work_progress\nfrom last_chain_stats l\n left join first_chain_stats f on l.chain = f.chain",
          "refId": "A",
          "select": [
            [
              {
                "params": ["balance"],
                "type": "column"
              }
            ]
          ],
          "table": "beefy_investor_timeline_cache_ts",
          "timeColumn": "datetime",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "$chains investments: Import Stats ",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "P1A7A05C63CAD1F73"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "none"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byRegexp",
              "options": ".*error.*"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "#f2495c80",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": ".*not_covered.*"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "#5795f280",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": ".*total_work.*"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "#ff983080",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": ".*progress.*"
            },
            "properties": [
              {
                "id": "unit",
                "value": "percentunit"
              },
              {
                "id": "color",
                "value": {
                  "mode": "thresholds"
                }
              },
              {
                "id": "thresholds",
                "value": {
                  "mode": "absolute",
                  "steps": [
                    {
                      "color": "green",
                      "value": null
                    },
                    {
                      "color": "red",
                      "value": 0
                    }
                  ]
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 3,
        "w": 12,
        "x": 12,
        "y": 17
      },
      "id": 1231,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": ["allValues"],
          "fields": "",
          "values": true
        },
        "textMode": "value_and_name"
      },
      "pluginVersion": "9.2.15",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "P1A7A05C63CAD1F73"
          },
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "with last_chain_stats as (\n  SELECT\n    chain,\n    last(errors_count, datetime) as errors_count,\n    last(not_covered_yet, datetime) as not_covered_yet,\n    last(success_count, datetime) as success_count,\n    last(errors_count, datetime) + last(not_covered_yet, datetime) as total_work\n  FROM import_state_metrics_ts\n  WHERE\n    $__timeFilter(datetime)\n    and chain in ($chains)\n    and eol in (select unnest(Array[$dashboard_eol]::boolean[]))\n    and import_type = 'product:share-rate'\n  group by 1\n), first_chain_stats as (\n  SELECT\n    chain,\n    first(errors_count, datetime) as errors_count,\n    first(not_covered_yet, datetime) as not_covered_yet,\n    first(success_count, datetime) as success_count,\n    first(errors_count, datetime) + first(not_covered_yet, datetime) as total_work\n  FROM import_state_metrics_ts\n  WHERE\n    $__timeFilter(datetime)\n    and chain in ($chains)\n    and eol in (select unnest(Array[$dashboard_eol]::boolean[]))\n    and import_type = 'product:share-rate'\n  group by 1\n)\nselect \n  sum(f.errors_count) as errors_count_before,\n  sum(l.errors_count) as errors_count_now,\n  case when sum(f.errors_count) = 0 then 0 else (sum(l.errors_count) - sum(f.errors_count))/sum(f.errors_count) end as error_progress,\n  --sum(f.success_count) as success_count_before,\n  --sum(l.success_count) as success_count_now,\n  --case when sum(f.success_count) = 0 then 0 else (sum(l.success_count) - sum(f.success_count))/sum(f.success_count) end as success_count_progress,\n  sum(f.not_covered_yet) as not_covered_yet_before,\n  sum(l.not_covered_yet) as not_covered_yet_now,\n  case when sum(f.not_covered_yet) = 0 then 0 else (sum(l.not_covered_yet) - sum(f.not_covered_yet))/sum(f.not_covered_yet) end as not_covered_yet_progress,\n  sum(f.total_work) as total_work_before,\n  sum(l.total_work) as total_work_now,\n  case when sum(f.total_work) = 0 then 0 else (sum(l.total_work) - sum(f.total_work))/sum(f.total_work) end as total_work_progress\nfrom last_chain_stats l\n left join first_chain_stats f on l.chain = f.chain",
          "refId": "A",
          "select": [
            [
              {
                "params": ["balance"],
                "type": "column"
              }
            ]
          ],
          "table": "beefy_investor_timeline_cache_ts",
          "timeColumn": "datetime",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "$chains investments: Import Stats ",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "P1A7A05C63CAD1F73"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "series",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "none"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byRegexp",
              "options": ".+_total_work"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "orange",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": ".+_errors_count"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "red",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": ".+_not_covered_yet"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "blue",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "min_.+"
            },
            "properties": [
              {
                "id": "custom.lineWidth",
                "value": 0
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "max_.+"
            },
            "properties": [
              {
                "id": "custom.lineWidth",
                "value": 0
              },
              {
                "id": "custom.fillOpacity",
                "value": 31
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "max_total_work"
            },
            "properties": [
              {
                "id": "custom.fillBelowTo",
                "value": "min_total_work"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "max_errors_count"
            },
            "properties": [
              {
                "id": "custom.fillBelowTo",
                "value": "min_errors_count"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "max_not_covered_yet"
            },
            "properties": [
              {
                "id": "custom.fillBelowTo",
                "value": "min_not_covered_yet"
              }
            ]
          },
          {
            "__systemRef": "hideSeriesFrom",
            "matcher": {
              "id": "byNames",
              "options": {
                "mode": "exclude",
                "names": [
                  "avg_total_work",
                  "min_errors_count",
                  "min_not_covered_yet",
                  "min_total_work",
                  "max_errors_count",
                  "max_not_covered_yet",
                  "max_total_work"
                ],
                "prefix": "All except:",
                "readOnly": true
              }
            },
            "properties": [
              {
                "id": "custom.hideFrom",
                "value": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 10,
        "w": 12,
        "x": 0,
        "y": 20
      },
      "id": 970,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "P1A7A05C63CAD1F73"
          },
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "with stats as (\n  SELECT\n    datetime,\n    sum(errors_count) as errors_count,\n    sum(success_count) as success_count,\n    sum(not_covered_yet) as not_covered_yet,\n    sum(errors_count) + sum(not_covered_yet) as total_work\n  FROM import_state_metrics_ts\n  WHERE\n    $__timeFilter(datetime)\n    and chain in ($chains)\n    and eol in (select unnest(Array[$dashboard_eol]::boolean[]))\n    and import_type in ('product:investment')\n  group by 1\n)\nselect \n  time_bucket('$interval'::interval, datetime) AS \"time\",\n  min(errors_count) as min_errors_count,\n  avg(errors_count) as avg_errors_count,\n  max(errors_count) as max_errors_count,\n  min(not_covered_yet) as min_not_covered_yet,\n  avg(not_covered_yet) as avg_not_covered_yet,\n  max(not_covered_yet) as max_not_covered_yet,\n  min(total_work) as min_total_work,\n  avg(total_work) as avg_total_work,\n  max(total_work) as max_total_work\nfrom stats\ngroup by 1\nORDER BY 1",
          "refId": "A",
          "select": [
            [
              {
                "params": ["balance"],
                "type": "column"
              }
            ]
          ],
          "table": "beefy_investor_timeline_cache_ts",
          "timeColumn": "datetime",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "$chains investments",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "P1A7A05C63CAD1F73"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "series",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "none"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byRegexp",
              "options": ".+_total_work"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "orange",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": ".+_errors_count"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "red",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": ".+_not_covered_yet"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "blue",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "min_.+"
            },
            "properties": [
              {
                "id": "custom.lineWidth",
                "value": 0
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "max_.+"
            },
            "properties": [
              {
                "id": "custom.lineWidth",
                "value": 0
              },
              {
                "id": "custom.fillOpacity",
                "value": 31
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "max_total_work"
            },
            "properties": [
              {
                "id": "custom.fillBelowTo",
                "value": "min_total_work"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "max_errors_count"
            },
            "properties": [
              {
                "id": "custom.fillBelowTo",
                "value": "min_errors_count"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "max_not_covered_yet"
            },
            "properties": [
              {
                "id": "custom.fillBelowTo",
                "value": "min_not_covered_yet"
              }
            ]
          },
          {
            "__systemRef": "hideSeriesFrom",
            "matcher": {
              "id": "byNames",
              "options": {
                "mode": "exclude",
                "names": [
                  "avg_total_work",
                  "min_errors_count",
                  "min_not_covered_yet",
                  "min_total_work",
                  "max_errors_count",
                  "max_not_covered_yet",
                  "max_total_work"
                ],
                "prefix": "All except:",
                "readOnly": true
              }
            },
            "properties": [
              {
                "id": "custom.hideFrom",
                "value": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 10,
        "w": 12,
        "x": 12,
        "y": 20
      },
      "id": 1035,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "P1A7A05C63CAD1F73"
          },
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "with stats as (\n  SELECT\n    datetime,\n    sum(errors_count) as errors_count,\n    sum(success_count) as success_count,\n    sum(not_covered_yet) as not_covered_yet,\n    sum(errors_count) + sum(not_covered_yet) as total_work\n  FROM import_state_metrics_ts\n  WHERE\n    $__timeFilter(datetime)\n    and chain in ($chains)\n    and eol in (select unnest(Array[$dashboard_eol]::boolean[]))\n    and import_type in ('product:share-rate')\n  group by 1\n)\nselect \n  time_bucket('$interval'::interval, datetime) AS \"time\",\n  min(errors_count) as min_errors_count,\n  avg(errors_count) as avg_errors_count,\n  max(errors_count) as max_errors_count,\n  min(not_covered_yet) as min_not_covered_yet,\n  avg(not_covered_yet) as avg_not_covered_yet,\n  max(not_covered_yet) as max_not_covered_yet,\n  min(total_work) as min_total_work,\n  avg(total_work) as avg_total_work,\n  max(total_work) as max_total_work\nfrom stats\ngroup by 1\nORDER BY 1",
          "refId": "A",
          "select": [
            [
              {
                "params": ["balance"],
                "type": "column"
              }
            ]
          ],
          "table": "beefy_investor_timeline_cache_ts",
          "timeColumn": "datetime",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "$chains share rate",
      "type": "timeseries"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 30
      },
      "id": 2,
      "panels": [],
      "repeat": "chains",
      "repeatDirection": "h",
      "title": "$chains",
      "type": "row"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "P1A7A05C63CAD1F73"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "series",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          },
          "unit": "none"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byRegexp",
              "options": ".+_total_work"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "orange",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": ".+_errors_count"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "red",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": ".+_not_covered_yet"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "blue",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "min_.+"
            },
            "properties": [
              {
                "id": "custom.lineWidth",
                "value": 0
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "max_.+"
            },
            "properties": [
              {
                "id": "custom.lineWidth",
                "value": 0
              },
              {
                "id": "custom.fillOpacity",
                "value": 31
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "max_total_work"
            },
            "properties": [
              {
                "id": "custom.fillBelowTo",
                "value": "min_total_work"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "max_errors_count"
            },
            "properties": [
              {
                "id": "custom.fillBelowTo",
                "value": "min_errors_count"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "max_not_covered_yet"
            },
            "properties": [
              {
                "id": "custom.fillBelowTo",
                "value": "min_not_covered_yet"
              }
            ]
          },
          {
            "__systemRef": "hideSeriesFrom",
            "matcher": {
              "id": "byNames",
              "options": {
                "mode": "exclude",
                "names": [
                  "avg_total_work",
                  "min_errors_count",
                  "min_not_covered_yet",
                  "min_total_work",
                  "max_errors_count",
                  "max_not_covered_yet",
                  "max_total_work"
                ],
                "prefix": "All except:",
                "readOnly": true
              }
            },
            "properties": [
              {
                "id": "custom.hideFrom",
                "value": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 10,
        "w": 12,
        "x": 0,
        "y": 31
      },
      "id": 1100,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "P1A7A05C63CAD1F73"
          },
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "with stats as (\n  SELECT\n    datetime,\n    sum(errors_count) as errors_count,\n    sum(success_count) as success_count,\n    sum(not_covered_yet) as not_covered_yet,\n    sum(errors_count) + sum(not_covered_yet) as total_work\n  FROM import_state_metrics_ts\n  WHERE\n    $__timeFilter(datetime)\n    and chain in ($chains)\n    and eol in (select unnest(Array[$dashboard_eol]::boolean[]))\n    and import_type in ('product:investment')\n  group by 1\n)\nselect \n  time_bucket('$interval'::interval, datetime) AS \"time\",\n  min(errors_count) as min_errors_count,\n  avg(errors_count) as avg_errors_count,\n  max(errors_count) as max_errors_count,\n  min(not_covered_yet) as min_not_covered_yet,\n  avg(not_covered_yet) as avg_not_covered_yet,\n  max(not_covered_yet) as max_not_covered_yet,\n  min(total_work) as min_total_work,\n  avg(total_work) as avg_total_work,\n  max(total_work) as max_total_work\nfrom stats\ngroup by 1\nORDER BY 1",
          "refId": "A",
          "select": [
            [
              {
                "params": ["balance"],
                "type": "column"
              }
            ]
          ],
          "table": "beefy_investor_timeline_cache_ts",
          "timeColumn": "datetime",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "$chains investments",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "P1A7A05C63CAD1F73"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "series",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          },
          "unit": "none"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byRegexp",
              "options": ".+_total_work"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "orange",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": ".+_errors_count"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "red",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": ".+_not_covered_yet"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "blue",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "min_.+"
            },
            "properties": [
              {
                "id": "custom.lineWidth",
                "value": 0
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "max_.+"
            },
            "properties": [
              {
                "id": "custom.lineWidth",
                "value": 0
              },
              {
                "id": "custom.fillOpacity",
                "value": 31
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "max_total_work"
            },
            "properties": [
              {
                "id": "custom.fillBelowTo",
                "value": "min_total_work"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "max_errors_count"
            },
            "properties": [
              {
                "id": "custom.fillBelowTo",
                "value": "min_errors_count"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "max_not_covered_yet"
            },
            "properties": [
              {
                "id": "custom.fillBelowTo",
                "value": "min_not_covered_yet"
              }
            ]
          },
          {
            "__systemRef": "hideSeriesFrom",
            "matcher": {
              "id": "byNames",
              "options": {
                "mode": "exclude",
                "names": [
                  "avg_total_work",
                  "min_errors_count",
                  "min_not_covered_yet",
                  "min_total_work",
                  "max_errors_count",
                  "max_not_covered_yet",
                  "max_total_work"
                ],
                "prefix": "All except:",
                "readOnly": true
              }
            },
            "properties": [
              {
                "id": "custom.hideFrom",
                "value": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 10,
        "w": 12,
        "x": 12,
        "y": 31
      },
      "id": 1101,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "P1A7A05C63CAD1F73"
          },
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "with stats as (\n  SELECT\n    datetime,\n    sum(errors_count) as errors_count,\n    sum(success_count) as success_count,\n    sum(not_covered_yet) as not_covered_yet,\n    sum(errors_count) + sum(not_covered_yet) as total_work\n  FROM import_state_metrics_ts\n  WHERE\n    $__timeFilter(datetime)\n    and chain in ($chains)\n    and eol in (select unnest(Array[$dashboard_eol]::boolean[]))\n    and import_type in ('product:share-rate')\n  group by 1\n)\nselect \n  time_bucket('$interval'::interval, datetime) AS \"time\",\n  min(errors_count) as min_errors_count,\n  avg(errors_count) as avg_errors_count,\n  max(errors_count) as max_errors_count,\n  min(not_covered_yet) as min_not_covered_yet,\n  avg(not_covered_yet) as avg_not_covered_yet,\n  max(not_covered_yet) as max_not_covered_yet,\n  min(total_work) as min_total_work,\n  avg(total_work) as avg_total_work,\n  max(total_work) as max_total_work\nfrom stats\ngroup by 1\nORDER BY 1",
          "refId": "A",
          "select": [
            [
              {
                "params": ["balance"],
                "type": "column"
              }
            ]
          ],
          "table": "beefy_investor_timeline_cache_ts",
          "timeColumn": "datetime",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "$chains share rate",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "P1A7A05C63CAD1F73"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "displayMode": "auto",
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 6,
        "w": 24,
        "x": 0,
        "y": 41
      },
      "id": 687,
      "options": {
        "footer": {
          "fields": "",
          "reducer": ["sum"],
          "show": false
        },
        "showHeader": true
      },
      "pluginVersion": "9.2.15",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "P1A7A05C63CAD1F73"
          },
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT datetime, rpc_url, request, response\nFROM rpc_error_ts\nWHERE\n  $__timeFilter(datetime)\n  and chain in ($chains)\nORDER BY 1 desc\nlimit 20",
          "refId": "A",
          "select": [
            [
              {
                "params": ["balance"],
                "type": "column"
              }
            ]
          ],
          "table": "beefy_investor_timeline_cache_ts",
          "timeColumn": "datetime",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "Last 20 Rpc Errors for this chain",
      "type": "table"
    }
  ],
  "refresh": false,
  "schemaVersion": 37,
  "style": "dark",
  "tags": [],
  "templating": {
    "list": [
      {
        "current": {
          "selected": false,
          "text": [
            "arbitrum",
            "aurora",
            "avax",
            "bsc",
            "canto",
            "celo",
            "cronos",
            "emerald",
            "ethereum",
            "fantom",
            "fuse",
            "kava",
            "metis",
            "moonbeam",
            "moonriver",
            "optimism",
            "polygon"
          ],
          "value": [
            "arbitrum",
            "aurora",
            "avax",
            "bsc",
            "canto",
            "celo",
            "cronos",
            "emerald",
            "ethereum",
            "fantom",
            "fuse",
            "kava",
            "metis",
            "moonbeam",
            "moonriver",
            "optimism",
            "polygon"
          ]
        },
        "datasource": {
          "type": "postgres",
          "uid": "P1A7A05C63CAD1F73"
        },
        "definition": "select distinct chain from import_state_metrics_ts",
        "hide": 0,
        "includeAll": true,
        "multi": true,
        "name": "chains",
        "options": [],
        "query": "select distinct chain from import_state_metrics_ts",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 5,
        "type": "query"
      },
      {
        "current": {
          "selected": false,
          "text": ["false"],
          "value": ["false"]
        },
        "hide": 0,
        "includeAll": true,
        "multi": true,
        "name": "dashboard_eol",
        "options": [
          {
            "selected": false,
            "text": "All",
            "value": "$__all"
          },
          {
            "selected": false,
            "text": "true",
            "value": "true"
          },
          {
            "selected": true,
            "text": "false",
            "value": "false"
          }
        ],
        "query": "true, false",
        "queryValue": "",
        "skipUrlSync": false,
        "type": "custom"
      },
      {
        "auto": true,
        "auto_count": 30,
        "auto_min": "10s",
        "current": {
          "selected": false,
          "text": "1m",
          "value": "1m"
        },
        "hide": 0,
        "name": "interval",
        "options": [
          {
            "selected": false,
            "text": "auto",
            "value": "$__auto_interval_interval"
          },
          {
            "selected": true,
            "text": "1m",
            "value": "1m"
          },
          {
            "selected": false,
            "text": "10m",
            "value": "10m"
          },
          {
            "selected": false,
            "text": "30m",
            "value": "30m"
          },
          {
            "selected": false,
            "text": "1h",
            "value": "1h"
          },
          {
            "selected": false,
            "text": "6h",
            "value": "6h"
          },
          {
            "selected": false,
            "text": "12h",
            "value": "12h"
          },
          {
            "selected": false,
            "text": "1d",
            "value": "1d"
          },
          {
            "selected": false,
            "text": "7d",
            "value": "7d"
          },
          {
            "selected": false,
            "text": "14d",
            "value": "14d"
          },
          {
            "selected": false,
            "text": "30d",
            "value": "30d"
          }
        ],
        "query": "1m,10m,30m,1h,6h,12h,1d,7d,14d,30d",
        "queryValue": "",
        "refresh": 2,
        "skipUrlSync": false,
        "type": "interval"
      }
    ]
  },
  "time": {
    "from": "now-2d",
    "to": "now"
  },
  "timepicker": {},
  "timezone": "",
  "title": "Import Stats Over time",
  "uid": "qNZkQmJ4z",
  "version": 49,
  "weekStart": ""
}
